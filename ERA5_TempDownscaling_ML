var time_start = '2010', time_end = '2020';

// Original 10km ERA5 data
var era = ee.ImageCollection("ECMWF/ERA5_LAND/DAILY_AGGR")
    .select('skin_temperature')
    .filterDate(time_start, time_end);

// Predictor MODIS LST
var mod = ee.ImageCollection("MODIS/061/MOD11A1")
    .select('LST_Day_1km')
    .filterDate(time_start, time_end);

Map.addLayer(era.first(), [], 'ERA5', false);
Map.addLayer(mod.first(), [], 'MODIS', false);

// Join collections by time
var join = ee.Join.inner();
var filter = ee.Filter.equals({
    leftField: 'system:time_start', rightField: 'system:time_start'
});

var join_collection = ee.ImageCollection(join.apply(era, mod, filter));

var collection = join_collection.map(function (img) {
    var era_img = ee.Image(img.get('primary'));
    var era_resample = era_img.resample().reproject({ crs: 'EPSG:4326', scale: 1000 });
    var mod_img = ee.Image(img.get('secondary')).multiply(0.02);
    var cons = ee.Image.constant(1);
    var stack = ee.Image.cat([era_resample, cons, mod_img]);
    return stack;
});

// Perform linear regression
var model = collection.reduce(ee.Reducer.linearRegression(2, 1));
var coefficients = model.select('coefficients');
var gain = coefficients.arrayGet([0, 0]);
var offset = coefficients.arrayGet([1, 0]);

// Statistical evaluation: Compute R² and RMSE
var predicted = collection.map(function (img) {
    var era_resample = img.select('skin_temperature');
    var mod_img = img.select('LST_Day_1km');
    var pred = era_resample.multiply(gain).add(offset);
    
    var residuals = era_resample.subtract(pred);
    var residualsSquared = residuals.pow(2);
    
    return img.addBands(pred.rename('predicted'))
              .addBands(residuals.rename('residuals'))
              .addBands(residualsSquared.rename('residuals_squared'));
});

// Compute RMSE
var mse = predicted.select('residuals_squared').mean();
var rmse = mse.sqrt();
print('Root Mean Squared Error (RMSE):', rmse);

// Compute R²
var originalMean = era.mean();
var totalSumSquares = era.map(function(img) {
    return img.subtract(originalMean).pow(2);
}).mean();

var rSquared = ee.Image(1).subtract(mse.divide(totalSumSquares));
print('R² (coefficient of determination):', rSquared);

// Apply model to past data (1970)
var era1970 = ee.ImageCollection("ECMWF/ERA5_LAND/DAILY_AGGR")
    .select('skin_temperature')
    .filterDate('1970', '1971')
    .map(function (img) {
        var resampled = img.resample().reproject({ crs: 'EPSG:4326', scale: 1000 });
        var predicted = resampled.multiply(gain).add(offset).rename('predicted');
        return resampled.addBands(predicted)
            .copyProperties(img, img.propertyNames());
    });

Map.addLayer(era1970.select('skin_temperature').first().clip(geometry), { min: 259, max: 283 }, 'Original 1970', false);
Map.addLayer(era1970.select('predicted').first().clip(geometry), { min: 260, max: 290 }, 'Predicted 1970', false);

// Correction term
var prediction_mean = era1970.select('predicted').mean();

var cor = era1970.map(function (img) {
    var original = img.select('skin_temperature');
    var predicted = img.select('predicted');
    var index = predicted.add(original.subtract(prediction_mean));
    return index.copyProperties(img, img.propertyNames());
});

Map.addLayer(cor.first().clip(geometry), { min: 260, max: 290 }, 'Corrected', false);
