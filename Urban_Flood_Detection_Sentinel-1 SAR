Map.centerObject(geometry);

var sar_before = ee.ImageCollection("COPERNICUS/S1_GRD")
.filterDate('2019-12-20','2019-12-29')
.filterBounds(geometry)
.filter(ee.Filter.listContains('transmitterReceiverPolarisation','VV'))
.filter(ee.Filter.eq('instrumentMode','IW'))
.filter(ee.Filter.eq('orbitProperties_pass','ASCENDING'))
.select('VV')
.map(function(img){
  return img.focalMean(60, 'square', 'meters')
  .copyProperties(img,img.propertyNames())
  });

  
Map.addLayer(sar_before.min().clip(geometry), [], 'sar_before', false);

var sar_after = ee.ImageCollection("COPERNICUS/S1_GRD")
.filterDate('2019-12-30','2020-01-03')
.filterBounds(geometry)
.filter(ee.Filter.listContains('transmitterReceiverPolarisation','VV'))
.filter(ee.Filter.eq('instrumentMode','IW'))
.filter(ee.Filter.eq('orbitProperties_pass','ASCENDING'))
.select('VV')
.map(function(img){
  return img.focalMean(60, 'square', 'meters')
  .copyProperties(img,img.propertyNames())
  });

Map.addLayer(sar_after.min().clip(geometry), [], 'sar_after', false);

var change = (sar_before.min()).subtract(sar_after.min())

Map.addLayer(change.clip(geometry),[],'change',false)

var water_mask = ee.ImageCollection("GOOGLE/DYNAMICWORLD/V1")
.select('label')
.filterDate('2018','2021')
.filterBounds(geometry)
.mode().eq(0).not()

var threshold = change.gt(5).updateMask(water_mask)

Map.addLayer(threshold.clip(geometry),[],'change_thr',false)

var Flooded_area = threshold.updateMask(threshold)

Map.addLayer(Flooded_area.clip(geometry),{palette:['blue']},'flooded',false)

var Area_img = Flooded_area.multiply(ee.Image.pixelArea().divide(1e6))

var flood_area  = Area_img.reduceRegion({
  reducer: ee.Reducer.sum(), geometry: geometry, scale: 60
  })

print(flood_area)  


var pr = ee.ImageCollection("NASA/GPM_L3/IMERG_V07")
.select('precipitation')
.filterDate('2019-12-25','2020-01-05')
//Precipitation unit is mm/hour

print(
  ui.Chart.image.series(pr, geometry, ee.Reducer.mean(), 10000, 'system:time_start')
  )
